name: kunit-build

on:
  workflow_call:
    inputs:
      commit_url:
        type: string
        required: true
        description: |
          内核源码仓库commit链接, 如: 
            - https://github.com/RVCK-Project/rvck/commit/32c7ba2136024ee1563416607e3265ccbee6a55e
            - https://github.com/RVCK-Project/rvck-olk/pull/103
      
      upload_dir:
        type: string
        required: true
        description: '上传目录'

    outputs:
      kernel_download_url:
        value: ${{ jobs.kernel-build.outputs.kernel_download_url }}
      summary_content:
        value: ${{ jobs.kernel-build.outputs.summary_content }}
    
    secrets:
      rync_passphrase: 
        required: true
        description: 'rsync上传内核所需密码'

jobs:
  kernel-build:
    runs-on:
      group: kernel_build-runner
    container:
      image: 'hub.oepkgs.net/oerv-ci/guix-kernel-cross-build:v1'
      
    outputs:
      kernel_download_url: ${{ steps.publish-kernel.outputs.kernel_download_url }}
      summary_content: ${{ steps.summary.outputs.summary_content }}

    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      kernel_result_dir: /srv/guix_result/

    steps:
      - name: kernel-build
        run: |
          guix-cross-build ${{ inputs.commit_url }}
   
      - name: publish kernel
        id: publish-kernel
        env:
          RSYNC_PASSWORD: ${{ secrets.rync_passphrase }}
        run: |
          rsync -av --progress --mkpath "${kernel_result_dir}/Image" rvck@10.30.190.110::RVCK/${{ inputs.upload_dir }}/
          echo "kernel_download_url=https://fast-mirror.isrc.ac.cn/openeuler-sig-riscv/openEuler-RISC-V/RVCK/OERV-RVCI/${{ inputs.upload_dir }}/Image" >> $GITHUB_OUTPUT
      
      ## 归档内核构建结果
      - name: archive kernel result
        id: archive-kernel
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: kernel-result-${{ github.run_id	}}
          path: ${kernel_result_dir}

      
      - name: summary
        if: ${{ always() }}
        id: summary
        env:
          kernel_url: ${{ steps.publish-kernel.outputs.kernel_download_url }}
          archive_url: ${{ steps.archive-kernel.outputs.artifact-url }}
          upload_dir: ${{ inputs.upload_dir }}
        continue-on-error: true
        run: |
          if [ "$kernel_url" != "" ]; then
            result="Kernel build succeeded: [${upload_dir}/Image](${kernel_url})"
          else
            result="Kernel build failed."
          fi

          cat > summary << EEE
          ## Kernel Build Result
          
          $result

          > Archive: [kernel-result.zip](${archive_url})

          EEE

          cat summary > $GITHUB_STEP_SUMMARY
          
          echo "summary_content<<EOF" >> $GITHUB_OUTPUT
          cat summary >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

