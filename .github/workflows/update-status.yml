name: update status

on:
  workflow_call:
    inputs:
      repo:
        type: string
        required: true
        description: 仓库
      event_id:
        type: string
        required: true
        description: 'pr|issue|comment id'
      event_name:
        required: true
        type: string
        description: '事件类型, pr|issue|comment'
      append_content:
        type: string
        description: '追加内容'
    outputs:
      event_id:
        description: '事件id'
        value: ${{ jobs.update-status.outputs.event_id }}
      event_name:
        description: '事件类型, issue|comment'
        value: ${{ jobs.update-status.outputs.event_name }}
    secrets:
      gh_token:
        required: true

env:
  GH_TOKEN: ${{ secrets.gh_token }}
  GH_REPO: ${{ inputs.repo }}
  event_id: ${{ inputs.event_id }}
  event_name: ${{ inputs.event_name }}
  append_content: ${{ inputs.append_content }}

jobs:
  update-status:
    outputs:
      event_id: ${{ steps.append-content.outputs.event_id }}
      event_name: ${{ steps.append-content.outputs.event_name }}
    runs-on: 'ubuntu-latest'
    steps:
      - name: show-info
        run: |
          cat > $GITHUB_STEP_SUMMARY << EEE
          | input | value |
          |:-:|:-:|
          |repo| $GH_REPO |
          |event name |$event_name |
          |event id |$event_id |

          append_content:
          \`\`\`markdown
          ${append_content}
          \`\`\`

          EEE
   
      - name: append-content
        run: |
          set -x
          case $event_name in
          issue_comment)
            content=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/${GH_REPO}/issues/comments/$event_id | jq -r '.body')
            ;;
          issues)
            content=$(gh issue view "$event_id" --json body  -q '.body')
            ;;
          pull_request_target)
            content=""
            ;;
          esac
          
          new_content=$(cat <<EEE
          $content

          $append_content
          EEE
          )
          
          echo $new_content
          
          new_event_name=${event_name}
          new_event_id=$event_id

          case $event_name in
          issue_comment)
          gh api --method PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${GH_REPO}/issues/comments/${event_id} \
            -f "body=$new_content"
            ;;
          issues)
            gh issue edit "$event_id" -b "$new_content"
            ;;
          pull_request*)
            new_event_id=$(gh pr comment "$event_id" -b "$new_content" | awk -F'-' '{print $NF}')
            new_event_name=issue_comment
            ;;
          esac

          echo "event_id=$new_event_id" >> $GITHUB_OUTPUT
          echo "event_name=$new_event_name" >> $GITHUB_OUTPUT
